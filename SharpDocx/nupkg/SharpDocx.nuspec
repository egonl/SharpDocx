<?xml version="1.0"?>
<package >
  <metadata>
    <id>SharpDocx</id>
    <version>2.3.0</version>
    <authors>egonl</authors>
    <owners>egonl</owners>
    <license type="expression">MIT</license>
    <projectUrl>https://github.com/egonl/SharpDocx</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <repository type="git" url="https://github.com/egonl/SharpDocx" />
    <summary>Lightweight template engine for creating Word documents</summary>
    <description>SharpDocx enables you to generate Word documents based on a view. The view itself is a Word document and can be as simple or complex as you want.
- Use C# code inside the view for inserting text, images or tables.
- Supports the MVC pattern, so you can use your own C# model in the template.
- Supports .NET Framework 3.5/4.5+, .NET Standard 2.0, .NET Core 3.1, .NET 5.0 and .NET 6.0.
- Based on Microsoft's Open XML SDK.
- Source code, tutorial and examples on GitHub.</description>
    <releaseNotes>Version 2.3.0 - October 9, 2022
- Added support for EMF files (issue #51).
- The IDs of DocProperties are now always unique (issue #51).
- Changed the default for TargetFrameworks to net48 and net6.0 to better support Visual Studio 2022.
- The NuGet package now also supports .NET Framework 4.0.
    
Version 2.2.0 - January 20, 2022
- Added support for Visual Studio Code and Visual Studio 2022.
- If a view gets updated it will now be recompiled automatically.
- A copy of the view to a temporary file is now only made in Debug builds.
- The SharpDocx IDE now also supports a document viewer in .NET Core 3.1, .NET 5.0 and .NET 6.0. However, you have to specify the location of the viewer.
- Added .NET 6.0 as a target framework for the samples.
- Updated DocumentFormat.OpenXml to 2.15.0.
- Fixed issue #37 (NullReferenceException).
- Fixed large image overflow bug.
    
Version 2.1.0 - October 16, 2021
- Added an overload for the Generate method that returns a stream (issue #8 and #9).
- Added support for Source Link.
- Updated samples to .NET Core 3.1.
- Updated DocumentFormat.OpenXml to 2.13.1.
- Fixed issue #34.
- Fixed issue #36.

Version 2.0.4 - August 8, 2020
- Fixed issue #21.
	
Version 2.0.3 - July 28, 2020
- Fixed issue #18.
	
Version 2.0.2 - March 14, 2020
- Fixed issue #4 and #14.
	
Version 2.0.1 - February 7, 2020
- Supports templates in loops and if-statements.
- Templates can be nested (see tutorial).
	
Version 1.2.1 - December 23, 2019
- Upgraded to DocumentFormat.OpenXml 2.9.1.
- Fixed issue with NuGet dependencies.

Version 1.2.0 - February 22, 2019
- Added support for .NET Standard 2.0.

Version 1.1.0 - January 4, 2018
- Some performance improvements.
- You can now specify a view model when calling Document.Generate.
- Tidied up API.

Version 1.0.0 - January 1, 2018
- Initial version.</releaseNotes>
    <copyright>Copyright 2018-2022</copyright>
    <tags>openxml office word document sharpdocx</tags>
    <dependencies>
      <group targetFramework="net35">
        <dependency id="DocumentFormat.OpenXml" version="2.18.0" />
      </group>            
      <group targetFramework="net40">
        <dependency id="DocumentFormat.OpenXml" version="2.18.0" />
      </group>                  
      <group targetFramework="net45">
        <dependency id="DocumentFormat.OpenXml" version="2.18.0" />
      </group>            
      <group targetFramework="netstandard2.0">
        <dependency id="DocumentFormat.OpenXml" version="2.18.0" />
        <dependency id="Microsoft.CodeAnalysis.CSharp" version="2.10.0" />
      </group>
    </dependencies>
  </metadata>
  <files>
    <file src="..\bin\Release\net35\SharpDocx.*" target="lib/net35" />
    <file src="..\bin\Release\net40\SharpDocx.*" target="lib/net40" />
    <file src="..\bin\Release\net45\SharpDocx.*" target="lib/net45" />
    <file src="..\bin\Release\netstandard2.0\SharpDocx.*" target="lib/netstandard2.0" />
    <file src="..\bin\Release\net35\SharpImage.*" target="lib/net35" />
    <file src="..\bin\Release\net40\SharpImage.*" target="lib/net40" />
    <file src="..\bin\Release\net45\SharpImage.*" target="lib/net45" />
    <file src="..\bin\Release\netstandard2.0\SharpImage.*" target="lib/netstandard2.0" />
  </files>
</package>